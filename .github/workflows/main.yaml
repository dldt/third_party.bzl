name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the main branch
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: ubuntu-latest
            bazelisk: https://github.com/bazelbuild/bazelisk/releases/download/v1.14.0/bazelisk-linux-amd64
            bazelcachepath: "/home/runner/.cache/bazel/_bazel_runner"
          - os: windows-latest
            bazelisk: https://github.com/bazelbuild/bazelisk/releases/download/v1.14.0/bazelisk-windows-amd64.exe
            bazelcachepath: "/Users/runner/_bazel_runner"

    runs-on: ${{ matrix.os }}
    steps:
    - name: Setting up compiler (Linux)
      if: startsWith(runner.os, 'Linux')
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install -y gcc-11 g++-11
        sudo apt install -y libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev mesa-common-dev libglvnd-dev libpulse-dev
    - uses: actions/checkout@v3
    - name: Mount bazel cache
      uses: actions/cache@v3
      with:
        path: "${{ matrix.bazelcachepath }}"
        key: ${{ runner.os }}-bazel

    - name: Install bazelisk
      run: |
        New-Item -Type Directory -Path "${ENV:GITHUB_WORKSPACE}/bin/"
        Invoke-WebRequest -Uri "${{ matrix.bazelisk }}" -OutFile "${ENV:GITHUB_WORKSPACE}/bin/bazel.exe"
        if (-Not ("${{ matrix.os }}".StartsWith("windows"))) {
          & chmod +x "${ENV:GITHUB_WORKSPACE}/bin/bazel.exe"
        }
      shell: pwsh

    - name: Build
      run: |
        if ( "${{ runner.os }}" -Eq "Linux" ) {
          ${ENV:CC} = "gcc-11"
          ${ENV:CXX} = "g++-11"
        }
        & ./build-all.ps1
      shell: pwsh
